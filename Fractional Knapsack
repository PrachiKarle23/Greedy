class Solution {
  public:
    // Function to get the maximum total value in the knapsack.
    static bool cmp(pair<double,Item>p1,pair<double,Item>p2)
    {
        return p1.first>p2.first;
    }
    double fractionalKnapsack(int w, Item arr[], int n) {
       vector<pair<double,Item>>p;
       
       for(int i=0;i<n;i++){
           int val=arr[i].value;
           int wt=arr[i].weight;
           double ratio=1.0* val/wt;
           pair<double,Item>s=make_pair(ratio,arr[i]);
           p.push_back(s);
       }
       sort(p.begin(),p.end(),cmp);
       
       double totalval=0;
       
       for(int i=0;i<n;i++)
       {
           if(p[i].second.weight>w)
           {
               totalval+=w*p[i].first;
               w=0;
           }
           else{
               totalval+=p[i].second.value;
               w-=p[i].second.weight;
           }
       }
       return totalval;
    }
};
