class Solution 
{
    public:
    //Function to find the maximum profit and the number of jobs done.
    static bool cmp(Job a,Job b)
    {
        return a.profit>b.profit;
    }
    vector<int> JobScheduling(Job arr[], int n) 
    { 
        sort(arr,arr+n,cmp);

        int maxiDeadline=INT_MIN;
        for(int i=0;i<n;i++)
        {
            maxiDeadline=max(maxiDeadline,arr[i].dead);
        }
        
        vector<int>schedule(maxiDeadline+1,-1);
        
        int maxProfit=0,count=0;
        for(int i=0;i<n;i++)
        {
            int currProfit=arr[i].profit;
            int currDead=arr[i].dead;
            int currId=arr[i].id;
            
            for(int k=currDead;k>0;k--)
            {
                if(schedule[k]==-1)
                {
                    schedule[k]=currId;
                    maxProfit+=currProfit;
                    count++;
                    break;
                }
            }
        }
        vector<int>ans;
        ans.push_back(count);
        ans.push_back(maxProfit);
        return ans;
    } 
};
