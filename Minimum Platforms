class Solution {
  public:
    
    int findPlatform(vector<int>& arr, vector<int>& dep) {
       int ans=0;
        for(int i=0;i<arr.size();i++)
        {
            int plat_no=1;
            for(int j=0;j<arr.size();j++)
            {
                if(i!=j)
                {
                    if(arr[i]>=arr[j] && dep[j]>=arr[i]){
                        plat_no++;
                    }
                }
            }
            ans=max(ans,plat_no);
        }
        return ans;
    }
};



class Solution {
  public:
    // Function to find the minimum number of platforms required at the
    // railway station such that no train waits.
    int findPlatform(vector<int>& arr, vector<int>& dep) {
        sort(arr.begin(),arr.end());
        sort(dep.begin(),dep.end());
        
        int plat_needed = 1, result = 1;
        int i = 1, j = 0;
        int n=arr.size();
        while(i<n && j<n)
        {
            if(arr[i]<=dep[j]){
                plat_needed++;
                i++;
            }
            else if(arr[i]>dep[j]){
                plat_needed--;
                j++;
            }
            if (plat_needed > result)
                result = plat_needed;
        }
        return result;
    }
};
